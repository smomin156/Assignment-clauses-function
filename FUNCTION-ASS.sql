--FUNCTIONS
--1.	TAKE PRODUCTNAME AS PARAMETER AND RETURN UNITPRICE
ALTER FUNCTION PRODUCT_PRICE(@PNAME VARCHAR(20)) 
RETURNS NUMERIC(4,2)
AS
BEGIN
	RETURN (SELECT UNITPRICE FROM PRODUCTS WHERE PRODUCTNAME=@PNAME)
END

SELECT DBO.PRODUCT_PRICE('CHAI')


--2.	TAKE PRODUCTNAME AS PARAMETER AND RETURN UNITSINSTOCK AND UNINTSONORDER
ALTER FUNCTION PRODUCT_STOCK(@PNAME VARCHAR(20)) 
RETURNS TABLE
AS
	RETURN (SELECT UNITSINSTOCK,UNITSONORDER FROM PRODUCTS WHERE PRODUCTNAME=@PNAME)

SELECT * FROM DBO.PRODUCT_STOCK('CHAI')


--3.	TAKE POSTALCODE AS PARAMETER AND RETURN CUSTOMER NAME. IF POSTAL CODE IS NOT VALID DISPLAY ERROR MESSAGE
SELECT * FROM CUSTOMERS
CREATE FUNCTION POSTAL_ERROR(@PCODE VARCHAR(40))
RETURNS VARCHAR(40)
AS
BEGIN
	DECLARE @NAME VARCHAR(40)
	IF EXISTS(SELECT CUSTOMERID FROM CUSTOMERS WHERE POSTALCODE=@PCODE)
		SELECT @NAME=CONTACTNAME FROM CUSTOMERS WHERE POSTALCODE=@PCODE
	ELSE
		SET @NAME='POSTAL CODE INVALID'
	RETURN @NAME
END

SELECT DBO.POSTAL_ERROR('0501')


--4.	TAKE COUNTRY AS PARAMETER AND RETURN CITY AND POSTALCODE FOR A CUSTOMERS
SELECT * FROM CUSTOMERS
ALTER FUNCTION CUST_ADDRESS(@COUNTRY VARCHAR(20)) RETURNS TABLE
AS
	RETURN (SELECT CITY,POSTALCODE FROM CUSTOMERS WHERE COUNTRY=@COUNTRY)
GO
SELECT * FROM DBO.CUST_ADDRESS('UK')


--5.	TAKE EMPLOYEE FIRSTNAME AND LASTNAME AS PARAMETER AND RETURN ALL CUSTOMERS COMPANY NAME,  CONTACTNAME, CONTACTTILE
SELECT * FROM EMPLOYEES
ALTER FUNCTION EMP_CUST(@FNAME VARCHAR(20),@LNAME VARCHAR(20))
RETURNS TABLE
AS
RETURN(SELECT COMPANYNAME,CONTACTNAME,CONTACTTITLE FROM CUSTOMERS WHERE CUSTOMERID IN(SELECT CUSTOMERID FROM ORDERS WHERE EMPLOYEEID IN (SELECT EMPLOYEEID FROM EMPLOYEES WHERE FIRSTNAME=@FNAME AND LASTNAME=@LNAME)))

SELECT * FROM DBO.EMP_CUST('ANDREW','FULLER')


--6.	TAKE YEAR AND EMPLOYEENAME AND DISPLAY AMOUNT OF ORDERS HANDLE  BY THE EMPLOYEE IN A YEAR  (SUM OF QUANTITY)
CREATE FUNCTION EMP_ORDERS(@YEAR INT,@NAME VARCHAR(10))RETURNS TABLE AS
RETURN (SELECT COUNT(O.EMPLOYEEID)AS COUNTORDER
		FROM ORDERS O JOIN EMPLOYEES E ON O.EMPLOYEEID=E.EMPLOYEEID
		WHERE E.FIRSTNAME=@NAME AND YEAR(O.ORDERDATE)=@YEAR )

SELECT * FROM DBO.EMP_ORDERS(1996,'ANDREW')


--7.	TAKE YEAR AND MONTH AS PARAMETER AND RETURN NO OF ORDERS SHIPPED IN THE GIVEN MONTH
CREATE FUNCTION ORDER_DATE(@YEAR INT,@MONTH INT)RETURNS TABLE AS
RETURN (SELECT MONTH(ORDERDATE)AS MONTH,COUNT(ORDERID)AS ORDERCOUNT FROM ORDERS 
		WHERE YEAR(ORDERDATE)=1996 AND MONTH(ORDERDATE)=8
		GROUP BY MONTH(ORDERDATE)
		)

SELECT * FROM DBO.ORDER_DATE(1996,4)



--8.	TAKE PRODUCTNAME AS PARAMTER AND RETURN TOTLA UNITS OF ORDER PLACED FOR THE PRODUCT (SUM(ORDERED QUANTITY)
--Hint: use Products and [Order Details] table

CREATE FUNCTION ORDER_QUANTITY(@PNAME VARCHAR(10))RETURNS TABLE AS
RETURN (SELECT O.PRODUCTID,SUM(O.QUANTITY)AS TOTALQUANTITY
		FROM PRODUCTS P JOIN [ORDER DETAILS]O ON P.PRODUCTID=O.PRODUCTID
		WHERE P.PRODUCTNAME='CHAI'
		GROUP BY O.PRODUCTID)

SELECT * FROM DBO.ORDER_QUANTITY('CHAI')



--9.       TAKE ORDERID AS PARAMETER AND RETURN TOTAL UNITS OF ORDER PLACE FOR THE ORDERID
 CREATE FUNCTION ORDER_DETAIL(@OID INT)RETURNS TABLE AS
 RETURN( SELECT SUM(QUANTITY)AS TOTALUNITS FROM [ORDER DETAILS] WHERE ORDERID=@OID)

 SELECT * FROM DBO.ORDER_DETAIL(10248)


----------------------------------------
