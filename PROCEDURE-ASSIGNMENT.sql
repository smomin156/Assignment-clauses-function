--NORTHWIND DATABASE – PROGRAMMING ASSIGNMENT
--1.	WRITE A PROCEDURE WHICH TAKES CATEGORY NAME AS A PARAMETER AND RETURN ALL PRODUCTS WHICH MATCH WITH THE CATEGORY NAME. IF NAME NOT EXIST PRINT MESSAGE
ALTER PROCEDURE PRODBYCATNAME (@CATNAME VARCHAR(20)) AS
BEGIN
	IF NOT EXISTS(SELECT CATEGORYID FROM CATEGORIES WHERE CATEGORYNAME=@CATNAME)
	BEGIN
		RAISERROR('CATEGORY NOT FOUND',16,1)
	END
	ELSE
	BEGIN
		SELECT * FROM PRODUCTS WHERE CATEGORYID IN(SELECT CATEGORYID FROM CATEGORIES WHERE CATEGORYNAME=@CATNAME )
	END
END

EXEC PRODBYCATNAME 'Condiments'
SELECT * FROM CATEGORIES

--2.	TAKE COUNTRY NAME AS THE PARAMETER AND RETURN ALL CUSTOMERS FROM THAT COUNTRY
ALTER PROCEDURE CUSTBYCOUNTRY (@CNAME VARCHAR(20))AS
BEGIN
	SELECT * FROM CUSTOMERS WHERE COUNTRY=@CNAME
END

EXEC CUSTBYCOUNTRY 'UK'


--3.       WRITE INSERT, UPDATE AND DELETE PROCEDURE FOR EMPLOYEES TABLE. IF ANY STATEMENT FAIL RAISE PROPER ERROR MESSAGE
--PARAMETER : EMPLOYEEID         LASTNAME         FIRSTNAME        TITLE      TITLEOFCOURTESY           BIRTHDATE                HIREDATE            ADDRESS             CITY       REGION                POSTALCODE     COUNTRY
SELECT * FROM EMPLOYEES
ALTER PROCEDURE CREATEEMP(@EMPID INT,@LNAME VARCHAR(20),@FNAME VARCHAR(20),@TITLE VARCHAR(20),@TCOURTEST VARCHAR(20),@BDATE DATETIME,@HIREDATE DATETIME,@ADDRESS VARCHAR(20),@CITY VARCHAR(20),@REGION VARCHAR(20),@PCODE VARCHAR(20),@COUNTRY VARCHAR(10))AS
BEGIN
	BEGIN TRY
		INSERT INTO EMPLOYEES(LASTNAME,FIRSTNAME,TITLE,TITLEOFCOURTESY,BIRTHDATE,HIREDATE,ADDRESS,CITY,REGION,POSTALCODE,COUNTRY) VALUES(@LNAME,@FNAME,@TITLE,@TCOURTEST,@BDATE,@HIREDATE,@ADDRESS,@CITY,@REGION,@PCODE,@COUNTRY)
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE()
	END CATCH	
END

EXEC CREATEEMP 'MOMIN','SAMEERA','TRAINEE','MS.',GETDATE(),GETDATE(),'722 Moss Bay Blvd.','MUMBAI','WA',98124,'INDIA'

CREATE PROCEDURE DELETEEMP (@EMPID INT)AS
BEGIN
	BEGIN TRY
		DELETE FROM EMPLOYEES WHERE EMPLOYEEID=@EMPID
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE()
	END CATCH	
END

CREATE PROCEDURE UPDATEEMP(@EMPID INT,@LNAME VARCHAR(20),@FNAME VARCHAR(20),@TITLE VARCHAR(20),@TCOURTEST VARCHAR(20),@BDATE DATETIME,@HIREDATE DATETIME,@ADDRESS VARCHAR(20),@CITY VARCHAR(20),@REGION VARCHAR(20),@PCODE VARCHAR(20),@COUNTRY VARCHAR(10))AS
BEGIN
	BEGIN TRY
		UPDATE EMPLOYEES SET LASTNAME=@LNAME,FIRSTNAME=@FNAME,TITLE=@TITLE,TITLEOFCOURTESY=@TCOURTEST,BIRTHDATE=@BDATE,HIREDATE=@HIREDATE,ADDRESS=@ADDRESS,CITY=@CITY,REGION=@REGION,POSTALCODE=@PCODE,COUNTRY=@COUNTRY
		WHERE EMPLOYEEID=@EMPID
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE()
	END CATCH	
END

--4.       TAKE REGIONDESCRIPTION AS A PARAMETER
--PRINT REGIONDESCRIPTION,  TERRITORY DESCRIPTION, AND EMPNAME
CREATE PROCEDURE REGIONPROC(@REGIONDES VARCHAR(20))AS
BEGIN
	DECLARE DESCURSOR CURSOR FOR SELECT T.TERRITORYDESCRIPTION,E.FIRSTNAME FROM REGION R 
	JOIN TERRITORIES T ON R.REGIONID=T.REGIONID
	JOIN EMPLOYEETERRITORIES ET ON ET.TERRITORYID=T.TERRITORYID 
	JOIN EMPLOYEES E ON E.EMPLOYEEID=ET.EMPLOYEEID
	WHERE R.REGIONDESCRIPTION=@REGIONDES
	DECLARE @TERDES VARCHAR(20),@FNAME VARCHAR(20)
	OPEN DESCURSOR
	FETCH NEXT FROM DESCURSOR INTO @TERDES,@FNAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		PRINT @REGIONDES +@TERDES+@FNAME
		FETCH NEXT FROM DESCURSOR INTO @TERDES,@FNAME
	END
	CLOSE REGIONPROC
	DEALLOCATE REGIONPROC
END

EXEC REGIONPROC 'EASTERN'

--5.       PRODUCTS TABLE
--WRITE A PROCEDURE WHICH CHECKS UNITSINSTOCK AND UNITSONORDER
--DISPLAY ALL PRODUCTS DETAILS (PRODUCTNAME, UNITPRICE, UNITSINSTOCK, UNITSONORDER, DIFFERENCE )  where UNITSONORDER is more then UNITSINSTOCK

ALTER PROCEDURE PRPRC AS
BEGIN
	SELECT *,(UNITSONORDER-UNITSINSTOCK)AS DIFFERENCE FROM PRODUCTS WHERE UNITSONORDER>UNITSINSTOCK
END
EXEC PRPRC


--6.       ORDER DETAILS TABLE
--TAKE ORDERID AS PARAMETER
--FOR THE ORDERID PRINT PRODUCTNAME, UNITPRICE, QUANTITY, DISCOUNT, TOTAL I.E UNITPRICE * QUNATITY, DISCOUNTAMOUNT, FINAL PRICE I.E. TOTAL – DISCOUNT AMOUNT
CREATE PROCEDURE PROID(@OID INT)AS
BEGIN
	SELECT P.PRODUCTNAME,OD.UNITPRICE,OD.QUANTITY,OD.DISCOUNT,(OD.UNITPRICE*OD.QUANTITY)AS TOTAL,((OD.UNITPRICE*OD.QUANTITY)-OD.DISCOUNT)AS FINAL
	FROM PRODUCTS P JOIN [ORDER DETAILS] OD ON P.PRODUCTID=OD.PRODUCTID WHERE OD.ORDERID=@OID
END

EXEC PROID 10248

--7.       WRITE A PROCEDURE WHICH INSERT IN PRODUCTTABLE
--PARAMETER FOR PROCEDURE PRODUCTNAME, UNITPRICE AND CATEGORYNAME
--CHECK IF CATEGORYNAME EXIST THEN ADD PRODUCTS WITH EXISTING CATEGORYID
--IF CATEGORYNAME DOES NOT EXIST FIRST INSERT IN CATEGORY TABLE
--READ CATEGORYID WHICH IS IDENTITY FIELD
--AND INSERT NEW INSERTED ID IN PRODUCT TABLE AS CATEGORYID

CREATE PROCEDURE INSERTPROD(@PNAME VARCHAR(20),@UPRICE INT,@CNAME VARCHAR(20))AS
BEGIN
	DECLARE @CID VARCHAR(20)
	IF NOT EXISTS(SELECT CATEGORYID FROM CATEGORIES WHERE CATEGORYNAME=@CNAME)
	BEGIN
		INSERT INTO CATEGORIES(CATEGORYNAME) VALUES(@CNAME)
		SELECT @CID=CATEGORYID FROM CATEGORIES WHERE CATEGORYNAME=@CNAME
	END
	ELSE
	BEGIN
		INSERT INTO PRODUCTS(PRODUCTNAME,UNITPRICE,CATEGORYID) VALUES(@PNAME,@UPRICE,@CID)
	END
END

EXEC INSERTPROD 'ELAICHI',50,'Condiments'
EXEC INSERTPROD 'PEN',10,'STATIONARY'

--8.       ORDERS TABLE
--TAKE YEAR AS PARAMETER TO PROCEDURE
--PRINT IN EACH QUARTER HOW MANY ORDERS BOOKED, 
--EXAMPLE IN Q-1 100
--                        Q-2 150 ….
--IF YEAR NOT EXIST PRINT ERROR MESSAGE

ALTER PROCEDURE ORDERQ(@OYEAR INT)AS
BEGIN
	IF NOT EXISTS(SELECT YEAR(ORDERDATE) FROM ORDERS WHERE YEAR(ORDERDATE)=@OYEAR)
	BEGIN
		RAISERROR('YEAR NOT EXISTS',16,1)
	END
	ELSE
	BEGIN
		SELECT DATEPART(Q,ORDERDATE)AS QUATER,COUNT(ORDERID)AS COUNT FROM ORDERS GROUP BY YEAR(ORDERDATE),DATEPART(Q,ORDERDATE) HAVING YEAR(ORDERDATE)=@OYEAR
	END
END

EXEC ORDERQ 1996

--9.       TABLE ORDERS AND ORDER DETAILS – OUT PARAMETER
--TAKE YEAR AND MONTH AS PARAMETER AND RETURN
--TOTAL REVENUE GENERATED SUM(UNITPRICE * QTY – DISCOUNT)
 
SELECT * FROM ORDERS
SELECT * FROM [ORDER DETAILS]
ALTER PROCEDURE OREVENUE(@YEAR INT,@MONTH INT,@REVENUE NUMERIC(5,2)OUT)AS
BEGIN 
	SELECT SUM(OD.UNITPRICE*OD.QUANTITY-OD.DISCOUNT)AS REVENUE
	FROM ORDERS O JOIN [ORDER DETAILS] OD ON O.ORDERID=OD.ORDERID
	WHERE YEAR(O.ORDERDATE)=@YEAR AND DATEPART(MM,(O.ORDERDATE))=@MONTH
END

DECLARE @REVENUE NUMERIC(5,2)
EXEC OREVENUE 1996,08,@REVENUE OUT
PRINT 'REVENUE '+CAST(@REVENUE AS VARCHAR)


--10.   FOR EACH EMPLOYEE PRINT EMPLOYEE FULL NAME, BIRTHDATE, HIREDATE, AGE (IN YEARS) AT THE TIME OF HIRING, RETIREMENT DATE. (60 YEARS)
SELECT * FROM EMPLOYEES
ALTER PROCEDURE EMPDET AS
BEGIN
	SELECT (FIRSTNAME+LASTNAME)AS FULLNAME,BIRTHDATE,HIREDATE,DATEDIFF(YY,BIRTHDATE,HIREDATE)AS AGE,DATEADD(YY,60,DATEDIFF(YY,BIRTHDATE,HIREDATE))AS RETIRE FROM EMPLOYEES
END

EXEC EMPDET